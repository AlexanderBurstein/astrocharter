{% extends 'base.html.twig' %}
    {% block title %}Charts analyzer - Places searcher{% endblock %}
    {% block stylesheets %}
    <link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/4.4.1/css/bootstrap.min.css" integrity="sha384-Vkoo8x4CGsO3+Hhxv8T/Q5PaXtkKtu6ug5TOeNV6gBiFeWPGFN9MuhOf23Q9Ifjh" crossorigin="anonymous">
        <style>
            #map {
                display: block;
                height: 95%;
            }
            .submit-group button {
                background-color: {% if used_place %}salmon{% else %}lightcyan{% endif %};
            }
        </style>
{% endblock %}
{% block body %}
<div class="one">
<div id="map" float="left"></div>
</div>
<div class="two">
    {% form_theme form with ['foundation_6_layout.html.twig'] only %}
    {{ form_start(form) }}
    <div class="input-group">
        <input disabled="true" id="placename" title="After searching and zooming pick the place by clicking on the map to proceed"/>
    </div>
    {{ form_row(form.placename) }}
    {{ form_row(form.latitude) }}
    {{ form_row(form.longitude) }}
    <div class=submit-group" style="visibility:hidden;">{{ form_row(form.save) }}</div>
    {{ form_end(form) }}
</div>{% endblock %}
{% block javascripts %}
    <script src="https://api-maps.yandex.ru/2.1/?apikey=7a2ac894-73db-4908-890a-84f2bcb6b10f&lang=en" type="text/javascript"></script>
    <script type="text/javascript">
    ymaps.ready(init);
    var myMap;
    var city;
    var intervalHandle;
    var currentCenter = [turnToDigit('{{ place.getLatitude() }}'), turnToDigit('{{ place.getLongitude() }}')];

    function init () {
        myMap = new ymaps.Map('map', {
                    center: currentCenter,
                    zoom: 3,
                    controls: [],}, {
                    minZoom: 3,
                    maxZoom: 11
                });
        myMap.controls.add('searchControl', {
            float: 'none',
            provider: 'yandex#map',
            position: {
                top: '20px',
                right: '40%'
            }
        });
        myMap.controls.add('zoomControl', {
            float: 'none',
            position: {
                top: '300px',
                right: '30px'
            }
        });
        myMap.events.add('click', function (e) {
            var coords = e.get('coords');
            var mgc = ymaps.geocode(coords);
            mgc.then(function(res){
                var firstGeoObject = res.geoObjects.get(0);
                FillControlData(firstGeoObject);
            },
                function(err){alert("Error")});
        });
    }
    function turnToDigit(degrees)
    {
        var result = 0;
        var firstChar = degrees[0];
        var digits = degrees.substr(1).split(".");
        result = parseFloat(digits[0]) + parseFloat(digits[1]) / 60.0 + parseFloat(digits[2]) / 3600;
        if (firstChar == "W" || firstChar == "S")
            result *= -1;
        return result;
    }
    function turnToString(plusMinusStr, coord)
    {
        var result = plusMinusStr[coord >= 0 ? 0 : 1];
        if (coord < 0)
            coord = -coord;
        var tr = Math.trunc(coord);
        if (plusMinusStr == "EW" && tr < 100)
            result += '0';
        result += (tr > 9 ? '' : '0') + tr + '.';
        coord -= tr;
        coord *= 60;
        tr = Math.trunc(coord);
        result += (tr > 9 ? '' : '0') + tr + '.';
        coord -= tr;
        coord *= 60;
        tr = Math.round(coord);
        result += (tr > 9 ? '' : '0') + tr;
        return result;
    }
    function FillControlData(firstGeoObject)
    {
        var localities = firstGeoObject.getLocalities();
        var description_parts = firstGeoObject.properties.get('description').split(", ");
        var name = description_parts[0];
        if (name.length > 0)
            name += ", ";
        if (localities.length > 0)
            name += localities[0];
        else
            name += firstGeoObject.properties.get('name');
        var placenameInput = document.getElementById('placename');
        placenameInput.value = name;
        placenameInput.style.backgroundColor = 'palegreen';
        placenameInput.style.color = 'black';
        placenameInput.style.width = placenameInput.value.length + "ch";
        var coords = firstGeoObject.geometry.getCoordinates();
        if (myMap._zoom < 9) {
            myMap.panTo([currentCenter, coords], {flying: 1});
            myMap.setCenter(coords, 9);
            currentCenter = coords;
        }
        if (myMap.balloon.isOpen())
            myMap.balloon.close();
        var latitude = turnToString("NS", coords[0]);
        var longitude = turnToString("EW", coords[1]);
        coords[0] += 30.0 / Math.pow(2, myMap._zoom);
        myMap.balloon.open(coords, {
            contentHeader: '<h3>Your place coordinates</h3>',
            contentBody: '<table><tr><td><b>Latitude: </b></td><td>' +
            latitude + '</td></tr><tr><td><b>Longitude: </b></td><td>' +
            longitude + '</td></tr></table>'
        });
        document.getElementById("place_placename").value = name;
        document.getElementById("place_latitude").value = latitude;
        document.getElementById("place_longitude").value = longitude;
        document.getElementById("place_save").parentNode.style.visibility = 'visible';
    }
</script>
<script src="https://code.jquery.com/jquery-3.4.1.slim.min.js" integrity="sha384-J6qa4849blE2+poT4WnyKhv5vZF5SrPo0iEjwBvKU7imGFAV0wwj1yYfoRSJoZ+n" crossorigin="anonymous"></script>
<script src="https://cdn.jsdelivr.net/npm/popper.js@1.16.0/dist/umd/popper.min.js" integrity="sha384-Q6E9RHvbIyZFJoft+2mJbHaEWldlvI9IOYy5n3zV9zzTtmI3UksdQRVvoxMfooAo" crossorigin="anonymous"></script>
<script src="https://stackpath.bootstrapcdn.com/bootstrap/4.4.1/js/bootstrap.min.js" integrity="sha384-wfSDF2E50Y2D1uUdj0O3uMBJnjuUD4Ih7YwaYd1iqfktj0Uod8GCExl3Og8ifwB6" crossorigin="anonymous"></script>
{% endblock %}
